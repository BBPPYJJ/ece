Grading at 11/07/2019:14:39:46.072480
For commit ID afdf656994ec9d3ad73ee8488bc39929392b485c
Grading at Thu Nov  7 09:39:36 EST 2019
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63868== Memcheck, a memory error detector
==63868== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63868== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63868== Command: ./test.1
==63868== Parent PID: 63867
==63868== 
==63868== Invalid read of size 8
==63868==    at 0x10AB69: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.1)
==63868==    by 0x109902: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.1)
==63868==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==63868== 
==63868== 
==63868== Process terminating with default action of signal 11 (SIGSEGV)
==63868==  Access not within mapped region at address 0x10
==63868==    at 0x10AB69: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.1)
==63868==    by 0x109902: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.1)
==63868==  If you believe this happened as a result of a stack
==63868==  overflow in your program's main thread (unlikely but
==63868==  possible), you can try to increase the size of the
==63868==  main thread stack using the --main-stacksize= flag.
==63868==  The main thread stack size used in this run was 8388608.
==63868== 
==63868== HEAP SUMMARY:
==63868==     in use at exit: 1,208 bytes in 51 blocks
==63868==   total heap usage: 102 allocs, 51 frees, 82,400 bytes allocated
==63868== 
==63868== LEAK SUMMARY:
==63868==    definitely lost: 0 bytes in 0 blocks
==63868==    indirectly lost: 0 bytes in 0 blocks
==63868==      possibly lost: 0 bytes in 0 blocks
==63868==    still reachable: 1,208 bytes in 51 blocks
==63868==         suppressed: 0 bytes in 0 blocks
==63868== Reachable blocks (those to which a pointer was found) are not shown.
==63868== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63868== 
==63868== For counts of detected and suppressed errors, rerun with: -v
==63868== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63891== Memcheck, a memory error detector
==63891== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63891== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63891== Command: ./test.2
==63891== Parent PID: 63890
==63891== 
==63891== Invalid read of size 8
==63891==    at 0x10AEA6: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.2)
==63891==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.2)
==63891==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==63891== 
==63891== 
==63891== Process terminating with default action of signal 11 (SIGSEGV)
==63891==  Access not within mapped region at address 0x30
==63891==    at 0x10AEA6: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.2)
==63891==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.2)
==63891==  If you believe this happened as a result of a stack
==63891==  overflow in your program's main thread (unlikely but
==63891==  possible), you can try to increase the size of the
==63891==  main thread stack using the --main-stacksize= flag.
==63891==  The main thread stack size used in this run was 8388608.
==63891== 
==63891== HEAP SUMMARY:
==63891==     in use at exit: 3,553 bytes in 90 blocks
==63891==   total heap usage: 360 allocs, 270 frees, 89,310 bytes allocated
==63891== 
==63891== LEAK SUMMARY:
==63891==    definitely lost: 0 bytes in 0 blocks
==63891==    indirectly lost: 0 bytes in 0 blocks
==63891==      possibly lost: 0 bytes in 0 blocks
==63891==    still reachable: 3,553 bytes in 90 blocks
==63891==         suppressed: 0 bytes in 0 blocks
==63891== Reachable blocks (those to which a pointer was found) are not shown.
==63891== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63891== 
==63891== For counts of detected and suppressed errors, rerun with: -v
==63891== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63900== Memcheck, a memory error detector
==63900== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63900== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63900== Command: ./test.3
==63900== Parent PID: 63899
==63900== 
==63900== Invalid read of size 8
==63900==    at 0x10AF3E: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.3)
==63900==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.3)
==63900==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==63900== 
==63900== 
==63900== Process terminating with default action of signal 11 (SIGSEGV)
==63900==  Access not within mapped region at address 0x38
==63900==    at 0x10AF3E: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.3)
==63900==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.3)
==63900==  If you believe this happened as a result of a stack
==63900==  overflow in your program's main thread (unlikely but
==63900==  possible), you can try to increase the size of the
==63900==  main thread stack using the --main-stacksize= flag.
==63900==  The main thread stack size used in this run was 8388608.
==63900== 
==63900== HEAP SUMMARY:
==63900==     in use at exit: 3,945 bytes in 90 blocks
==63900==   total heap usage: 380 allocs, 290 frees, 90,110 bytes allocated
==63900== 
==63900== LEAK SUMMARY:
==63900==    definitely lost: 0 bytes in 0 blocks
==63900==    indirectly lost: 0 bytes in 0 blocks
==63900==      possibly lost: 0 bytes in 0 blocks
==63900==    still reachable: 3,945 bytes in 90 blocks
==63900==         suppressed: 0 bytes in 0 blocks
==63900== Reachable blocks (those to which a pointer was found) are not shown.
==63900== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63900== 
==63900== For counts of detected and suppressed errors, rerun with: -v
==63900== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63909== Memcheck, a memory error detector
==63909== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63909== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63909== Command: ./test.4
==63909== Parent PID: 63908
==63909== 
==63909== Invalid read of size 8
==63909==    at 0x10B058: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.4)
==63909==    by 0x109B70: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.4)
==63909==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==63909== 
==63909== 
==63909== Process terminating with default action of signal 11 (SIGSEGV)
==63909==  Access not within mapped region at address 0x30
==63909==    at 0x10B058: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.4)
==63909==    by 0x109B70: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.4)
==63909==  If you believe this happened as a result of a stack
==63909==  overflow in your program's main thread (unlikely but
==63909==  possible), you can try to increase the size of the
==63909==  main thread stack using the --main-stacksize= flag.
==63909==  The main thread stack size used in this run was 8388608.
==63909== 
==63909== HEAP SUMMARY:
==63909==     in use at exit: 2,776 bytes in 51 blocks
==63909==   total heap usage: 102 allocs, 51 frees, 84,000 bytes allocated
==63909== 
==63909== LEAK SUMMARY:
==63909==    definitely lost: 0 bytes in 0 blocks
==63909==    indirectly lost: 0 bytes in 0 blocks
==63909==      possibly lost: 0 bytes in 0 blocks
==63909==    still reachable: 2,776 bytes in 51 blocks
==63909==         suppressed: 0 bytes in 0 blocks
==63909== Reachable blocks (those to which a pointer was found) are not shown.
==63909== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63909== 
==63909== For counts of detected and suppressed errors, rerun with: -v
==63909== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63928== Memcheck, a memory error detector
==63928== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63928== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63928== Command: ./test.5
==63928== Parent PID: 63927
==63928== 
==63928== Invalid read of size 8
==63928==    at 0x10B26E: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.5)
==63928==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.5)
==63928==  Address 0x48 is not stack'd, malloc'd or (recently) free'd
==63928== 
==63928== 
==63928== Process terminating with default action of signal 11 (SIGSEGV)
==63928==  Access not within mapped region at address 0x48
==63928==    at 0x10B26E: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.5)
==63928==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.5)
==63928==  If you believe this happened as a result of a stack
==63928==  overflow in your program's main thread (unlikely but
==63928==  possible), you can try to increase the size of the
==63928==  main thread stack using the --main-stacksize= flag.
==63928==  The main thread stack size used in this run was 8388608.
==63928== 
==63928== HEAP SUMMARY:
==63928==     in use at exit: 4,729 bytes in 90 blocks
==63928==   total heap usage: 287 allocs, 197 frees, 88,949 bytes allocated
==63928== 
==63928== LEAK SUMMARY:
==63928==    definitely lost: 0 bytes in 0 blocks
==63928==    indirectly lost: 0 bytes in 0 blocks
==63928==      possibly lost: 0 bytes in 0 blocks
==63928==    still reachable: 4,729 bytes in 90 blocks
==63928==         suppressed: 0 bytes in 0 blocks
==63928== Reachable blocks (those to which a pointer was found) are not shown.
==63928== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63928== 
==63928== For counts of detected and suppressed errors, rerun with: -v
==63928== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63937== Memcheck, a memory error detector
==63937== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63937== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63937== Command: ./test.6
==63937== Parent PID: 63936
==63937== 
==63937== Invalid read of size 8
==63937==    at 0x10B306: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.6)
==63937==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.6)
==63937==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==63937== 
==63937== 
==63937== Process terminating with default action of signal 11 (SIGSEGV)
==63937==  Access not within mapped region at address 0x50
==63937==    at 0x10B306: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.6)
==63937==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.6)
==63937==  If you believe this happened as a result of a stack
==63937==  overflow in your program's main thread (unlikely but
==63937==  possible), you can try to increase the size of the
==63937==  main thread stack using the --main-stacksize= flag.
==63937==  The main thread stack size used in this run was 8388608.
==63937== 
==63937== HEAP SUMMARY:
==63937==     in use at exit: 5,121 bytes in 90 blocks
==63937==   total heap usage: 307 allocs, 217 frees, 89,749 bytes allocated
==63937== 
==63937== LEAK SUMMARY:
==63937==    definitely lost: 0 bytes in 0 blocks
==63937==    indirectly lost: 0 bytes in 0 blocks
==63937==      possibly lost: 0 bytes in 0 blocks
==63937==    still reachable: 5,121 bytes in 90 blocks
==63937==         suppressed: 0 bytes in 0 blocks
==63937== Reachable blocks (those to which a pointer was found) are not shown.
==63937== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63937== 
==63937== For counts of detected and suppressed errors, rerun with: -v
==63937== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63946== Memcheck, a memory error detector
==63946== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63946== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63946== Command: ./test.7
==63946== Parent PID: 63945
==63946== 
==63946== Invalid read of size 8
==63946==    at 0x10B0A6: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.7)
==63946==    by 0x109AE0: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.7)
==63946==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==63946== 
==63946== 
==63946== Process terminating with default action of signal 11 (SIGSEGV)
==63946==  Access not within mapped region at address 0x38
==63946==    at 0x10B0A6: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.7)
==63946==    by 0x109AE0: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.7)
==63946==  If you believe this happened as a result of a stack
==63946==  overflow in your program's main thread (unlikely but
==63946==  possible), you can try to increase the size of the
==63946==  main thread stack using the --main-stacksize= flag.
==63946==  The main thread stack size used in this run was 8388608.
==63946== 
==63946== HEAP SUMMARY:
==63946==     in use at exit: 3,168 bytes in 51 blocks
==63946==   total heap usage: 102 allocs, 51 frees, 84,400 bytes allocated
==63946== 
==63946== LEAK SUMMARY:
==63946==    definitely lost: 0 bytes in 0 blocks
==63946==    indirectly lost: 0 bytes in 0 blocks
==63946==      possibly lost: 0 bytes in 0 blocks
==63946==    still reachable: 3,168 bytes in 51 blocks
==63946==         suppressed: 0 bytes in 0 blocks
==63946== Reachable blocks (those to which a pointer was found) are not shown.
==63946== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63946== 
==63946== For counts of detected and suppressed errors, rerun with: -v
==63946== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63969== Memcheck, a memory error detector
==63969== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63969== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63969== Command: ./test.8
==63969== Parent PID: 63968
==63969== 
==63969== Invalid read of size 8
==63969==    at 0x10B2BC: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.8)
==63969==    by 0x109AFD: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.8)
==63969==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==63969== 
==63969== 
==63969== Process terminating with default action of signal 11 (SIGSEGV)
==63969==  Access not within mapped region at address 0x50
==63969==    at 0x10B2BC: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.8)
==63969==    by 0x109AFD: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.8)
==63969==  If you believe this happened as a result of a stack
==63969==  overflow in your program's main thread (unlikely but
==63969==  possible), you can try to increase the size of the
==63969==  main thread stack using the --main-stacksize= flag.
==63969==  The main thread stack size used in this run was 8388608.
==63969== 
==63969== HEAP SUMMARY:
==63969==     in use at exit: 5,121 bytes in 90 blocks
==63969==   total heap usage: 360 allocs, 270 frees, 90,910 bytes allocated
==63969== 
==63969== LEAK SUMMARY:
==63969==    definitely lost: 0 bytes in 0 blocks
==63969==    indirectly lost: 0 bytes in 0 blocks
==63969==      possibly lost: 0 bytes in 0 blocks
==63969==    still reachable: 5,121 bytes in 90 blocks
==63969==         suppressed: 0 bytes in 0 blocks
==63969== Reachable blocks (those to which a pointer was found) are not shown.
==63969== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63969== 
==63969== For counts of detected and suppressed errors, rerun with: -v
==63969== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==63992== Memcheck, a memory error detector
==63992== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63992== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==63992== Command: ./test.9
==63992== Parent PID: 63991
==63992== 
==63992== Invalid read of size 8
==63992==    at 0x10B2DA: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.9)
==63992==    by 0x109B0F: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.9)
==63992==  Address 0x58 is not stack'd, malloc'd or (recently) free'd
==63992== 
==63992== 
==63992== Process terminating with default action of signal 11 (SIGSEGV)
==63992==  Access not within mapped region at address 0x58
==63992==    at 0x10B2DA: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.9)
==63992==    by 0x109B0F: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.WxxxQE/test.9)
==63992==  If you believe this happened as a result of a stack
==63992==  overflow in your program's main thread (unlikely but
==63992==  possible), you can try to increase the size of the
==63992==  main thread stack using the --main-stacksize= flag.
==63992==  The main thread stack size used in this run was 8388608.
==63992== 
==63992== HEAP SUMMARY:
==63992==     in use at exit: 5,513 bytes in 90 blocks
==63992==   total heap usage: 380 allocs, 290 frees, 91,710 bytes allocated
==63992== 
==63992== LEAK SUMMARY:
==63992==    definitely lost: 0 bytes in 0 blocks
==63992==    indirectly lost: 0 bytes in 0 blocks
==63992==      possibly lost: 0 bytes in 0 blocks
==63992==    still reachable: 5,513 bytes in 90 blocks
==63992==         suppressed: 0 bytes in 0 blocks
==63992== Reachable blocks (those to which a pointer was found) are not shown.
==63992== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63992== 
==63992== For counts of detected and suppressed errors, rerun with: -v
==63992== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
