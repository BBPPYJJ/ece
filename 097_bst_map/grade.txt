Grading at 11/07/2019:19:22:26.791390
For commit ID f9c1236bec8aba56f81aa214c99b7936a0b80559
Grading at Thu Nov  7 14:22:17 EST 2019
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2667== Memcheck, a memory error detector
==2667== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2667== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2667== Command: ./test.1
==2667== Parent PID: 2666
==2667== 
==2667== Invalid read of size 8
==2667==    at 0x10AB8D: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.1)
==2667==    by 0x109902: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.1)
==2667==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==2667== 
==2667== 
==2667== Process terminating with default action of signal 11 (SIGSEGV)
==2667==  Access not within mapped region at address 0x10
==2667==    at 0x10AB8D: BstMap<int, int>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.1)
==2667==    by 0x109902: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.1)
==2667==  If you believe this happened as a result of a stack
==2667==  overflow in your program's main thread (unlikely but
==2667==  possible), you can try to increase the size of the
==2667==  main thread stack using the --main-stacksize= flag.
==2667==  The main thread stack size used in this run was 8388608.
==2667== 
==2667== HEAP SUMMARY:
==2667==     in use at exit: 1,208 bytes in 51 blocks
==2667==   total heap usage: 102 allocs, 51 frees, 82,400 bytes allocated
==2667== 
==2667== LEAK SUMMARY:
==2667==    definitely lost: 0 bytes in 0 blocks
==2667==    indirectly lost: 0 bytes in 0 blocks
==2667==      possibly lost: 0 bytes in 0 blocks
==2667==    still reachable: 1,208 bytes in 51 blocks
==2667==         suppressed: 0 bytes in 0 blocks
==2667== Reachable blocks (those to which a pointer was found) are not shown.
==2667== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2667== 
==2667== For counts of detected and suppressed errors, rerun with: -v
==2667== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2703== Memcheck, a memory error detector
==2703== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2703== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2703== Command: ./test.2
==2703== Parent PID: 2702
==2703== 
==2703== Invalid read of size 8
==2703==    at 0x10AEC4: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.2)
==2703==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.2)
==2703==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==2703== 
==2703== 
==2703== Process terminating with default action of signal 11 (SIGSEGV)
==2703==  Access not within mapped region at address 0x30
==2703==    at 0x10AEC4: BstMap<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.2)
==2703==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.2)
==2703==  If you believe this happened as a result of a stack
==2703==  overflow in your program's main thread (unlikely but
==2703==  possible), you can try to increase the size of the
==2703==  main thread stack using the --main-stacksize= flag.
==2703==  The main thread stack size used in this run was 8388608.
==2703== 
==2703== HEAP SUMMARY:
==2703==     in use at exit: 3,553 bytes in 90 blocks
==2703==   total heap usage: 222 allocs, 132 frees, 86,400 bytes allocated
==2703== 
==2703== LEAK SUMMARY:
==2703==    definitely lost: 0 bytes in 0 blocks
==2703==    indirectly lost: 0 bytes in 0 blocks
==2703==      possibly lost: 0 bytes in 0 blocks
==2703==    still reachable: 3,553 bytes in 90 blocks
==2703==         suppressed: 0 bytes in 0 blocks
==2703== Reachable blocks (those to which a pointer was found) are not shown.
==2703== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2703== 
==2703== For counts of detected and suppressed errors, rerun with: -v
==2703== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2720== Memcheck, a memory error detector
==2720== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2720== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2720== Command: ./test.3
==2720== Parent PID: 2719
==2720== 
==2720== Invalid read of size 8
==2720==    at 0x10AF5C: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.3)
==2720==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.3)
==2720==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==2720== 
==2720== 
==2720== Process terminating with default action of signal 11 (SIGSEGV)
==2720==  Access not within mapped region at address 0x38
==2720==    at 0x10AF5C: BstMap<int, Tester>::remove(int const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.3)
==2720==    by 0x1099AE: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.3)
==2720==  If you believe this happened as a result of a stack
==2720==  overflow in your program's main thread (unlikely but
==2720==  possible), you can try to increase the size of the
==2720==  main thread stack using the --main-stacksize= flag.
==2720==  The main thread stack size used in this run was 8388608.
==2720== 
==2720== HEAP SUMMARY:
==2720==     in use at exit: 3,945 bytes in 90 blocks
==2720==   total heap usage: 242 allocs, 152 frees, 87,200 bytes allocated
==2720== 
==2720== LEAK SUMMARY:
==2720==    definitely lost: 0 bytes in 0 blocks
==2720==    indirectly lost: 0 bytes in 0 blocks
==2720==      possibly lost: 0 bytes in 0 blocks
==2720==    still reachable: 3,945 bytes in 90 blocks
==2720==         suppressed: 0 bytes in 0 blocks
==2720== Reachable blocks (those to which a pointer was found) are not shown.
==2720== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2720== 
==2720== For counts of detected and suppressed errors, rerun with: -v
==2720== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2735== Memcheck, a memory error detector
==2735== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2735== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2735== Command: ./test.4
==2735== Parent PID: 2734
==2735== 
==2735== Invalid read of size 8
==2735==    at 0x10B072: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.4)
==2735==    by 0x109B70: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.4)
==2735==  Address 0x30 is not stack'd, malloc'd or (recently) free'd
==2735== 
==2735== 
==2735== Process terminating with default action of signal 11 (SIGSEGV)
==2735==  Access not within mapped region at address 0x30
==2735==    at 0x10B072: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.4)
==2735==    by 0x109B70: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.4)
==2735==  If you believe this happened as a result of a stack
==2735==  overflow in your program's main thread (unlikely but
==2735==  possible), you can try to increase the size of the
==2735==  main thread stack using the --main-stacksize= flag.
==2735==  The main thread stack size used in this run was 8388608.
==2735== 
==2735== HEAP SUMMARY:
==2735==     in use at exit: 2,776 bytes in 51 blocks
==2735==   total heap usage: 102 allocs, 51 frees, 84,000 bytes allocated
==2735== 
==2735== LEAK SUMMARY:
==2735==    definitely lost: 0 bytes in 0 blocks
==2735==    indirectly lost: 0 bytes in 0 blocks
==2735==      possibly lost: 0 bytes in 0 blocks
==2735==    still reachable: 2,776 bytes in 51 blocks
==2735==         suppressed: 0 bytes in 0 blocks
==2735== Reachable blocks (those to which a pointer was found) are not shown.
==2735== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2735== 
==2735== For counts of detected and suppressed errors, rerun with: -v
==2735== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2751== Memcheck, a memory error detector
==2751== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2751== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2751== Command: ./test.5
==2751== Parent PID: 2750
==2751== 
==2751== Invalid read of size 8
==2751==    at 0x10B2B0: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.5)
==2751==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.5)
==2751==  Address 0x48 is not stack'd, malloc'd or (recently) free'd
==2751== 
==2751== 
==2751== Process terminating with default action of signal 11 (SIGSEGV)
==2751==  Access not within mapped region at address 0x48
==2751==    at 0x10B2B0: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.5)
==2751==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.5)
==2751==  If you believe this happened as a result of a stack
==2751==  overflow in your program's main thread (unlikely but
==2751==  possible), you can try to increase the size of the
==2751==  main thread stack using the --main-stacksize= flag.
==2751==  The main thread stack size used in this run was 8388608.
==2751== 
==2751== HEAP SUMMARY:
==2751==     in use at exit: 4,729 bytes in 90 blocks
==2751==   total heap usage: 222 allocs, 132 frees, 87,600 bytes allocated
==2751== 
==2751== LEAK SUMMARY:
==2751==    definitely lost: 0 bytes in 0 blocks
==2751==    indirectly lost: 0 bytes in 0 blocks
==2751==      possibly lost: 0 bytes in 0 blocks
==2751==    still reachable: 4,729 bytes in 90 blocks
==2751==         suppressed: 0 bytes in 0 blocks
==2751== Reachable blocks (those to which a pointer was found) are not shown.
==2751== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2751== 
==2751== For counts of detected and suppressed errors, rerun with: -v
==2751== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2797== Memcheck, a memory error detector
==2797== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2797== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2797== Command: ./test.6
==2797== Parent PID: 2796
==2797== 
==2797== Invalid read of size 8
==2797==    at 0x10B348: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.6)
==2797==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.6)
==2797==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==2797== 
==2797== 
==2797== Process terminating with default action of signal 11 (SIGSEGV)
==2797==  Access not within mapped region at address 0x50
==2797==    at 0x10B348: BstMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Tester>::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.6)
==2797==    by 0x109B8D: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.6)
==2797==  If you believe this happened as a result of a stack
==2797==  overflow in your program's main thread (unlikely but
==2797==  possible), you can try to increase the size of the
==2797==  main thread stack using the --main-stacksize= flag.
==2797==  The main thread stack size used in this run was 8388608.
==2797== 
==2797== HEAP SUMMARY:
==2797==     in use at exit: 5,121 bytes in 90 blocks
==2797==   total heap usage: 242 allocs, 152 frees, 88,400 bytes allocated
==2797== 
==2797== LEAK SUMMARY:
==2797==    definitely lost: 0 bytes in 0 blocks
==2797==    indirectly lost: 0 bytes in 0 blocks
==2797==      possibly lost: 0 bytes in 0 blocks
==2797==    still reachable: 5,121 bytes in 90 blocks
==2797==         suppressed: 0 bytes in 0 blocks
==2797== Reachable blocks (those to which a pointer was found) are not shown.
==2797== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2797== 
==2797== For counts of detected and suppressed errors, rerun with: -v
==2797== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2832== Memcheck, a memory error detector
==2832== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2832== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2832== Command: ./test.7
==2832== Parent PID: 2831
==2832== 
==2832== Invalid read of size 8
==2832==    at 0x10B0C0: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.7)
==2832==    by 0x109AE0: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.7)
==2832==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==2832== 
==2832== 
==2832== Process terminating with default action of signal 11 (SIGSEGV)
==2832==  Access not within mapped region at address 0x38
==2832==    at 0x10B0C0: BstMap<Tester, int>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.7)
==2832==    by 0x109AE0: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.7)
==2832==  If you believe this happened as a result of a stack
==2832==  overflow in your program's main thread (unlikely but
==2832==  possible), you can try to increase the size of the
==2832==  main thread stack using the --main-stacksize= flag.
==2832==  The main thread stack size used in this run was 8388608.
==2832== 
==2832== HEAP SUMMARY:
==2832==     in use at exit: 3,168 bytes in 51 blocks
==2832==   total heap usage: 102 allocs, 51 frees, 84,400 bytes allocated
==2832== 
==2832== LEAK SUMMARY:
==2832==    definitely lost: 0 bytes in 0 blocks
==2832==    indirectly lost: 0 bytes in 0 blocks
==2832==      possibly lost: 0 bytes in 0 blocks
==2832==    still reachable: 3,168 bytes in 51 blocks
==2832==         suppressed: 0 bytes in 0 blocks
==2832== Reachable blocks (those to which a pointer was found) are not shown.
==2832== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2832== 
==2832== For counts of detected and suppressed errors, rerun with: -v
==2832== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2857== Memcheck, a memory error detector
==2857== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2857== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2857== Command: ./test.8
==2857== Parent PID: 2856
==2857== 
==2857== Invalid read of size 8
==2857==    at 0x10B2FE: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.8)
==2857==    by 0x109AFD: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.8)
==2857==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==2857== 
==2857== 
==2857== Process terminating with default action of signal 11 (SIGSEGV)
==2857==  Access not within mapped region at address 0x50
==2857==    at 0x10B2FE: BstMap<Tester, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.8)
==2857==    by 0x109AFD: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.8)
==2857==  If you believe this happened as a result of a stack
==2857==  overflow in your program's main thread (unlikely but
==2857==  possible), you can try to increase the size of the
==2857==  main thread stack using the --main-stacksize= flag.
==2857==  The main thread stack size used in this run was 8388608.
==2857== 
==2857== HEAP SUMMARY:
==2857==     in use at exit: 5,121 bytes in 90 blocks
==2857==   total heap usage: 222 allocs, 132 frees, 88,000 bytes allocated
==2857== 
==2857== LEAK SUMMARY:
==2857==    definitely lost: 0 bytes in 0 blocks
==2857==    indirectly lost: 0 bytes in 0 blocks
==2857==      possibly lost: 0 bytes in 0 blocks
==2857==    still reachable: 5,121 bytes in 90 blocks
==2857==         suppressed: 0 bytes in 0 blocks
==2857== Reachable blocks (those to which a pointer was found) are not shown.
==2857== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2857== 
==2857== For counts of detected and suppressed errors, rerun with: -v
==2857== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
The code compiled.
  - Valgrind reported errors
Valgrind reported errors (test failed).
==2884== Memcheck, a memory error detector
==2884== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2884== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2884== Command: ./test.9
==2884== Parent PID: 2883
==2884== 
==2884== Invalid read of size 8
==2884==    at 0x10B322: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.9)
==2884==    by 0x109B0F: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.9)
==2884==  Address 0x58 is not stack'd, malloc'd or (recently) free'd
==2884== 
==2884== 
==2884== Process terminating with default action of signal 11 (SIGSEGV)
==2884==  Access not within mapped region at address 0x58
==2884==    at 0x10B322: BstMap<Tester, Tester>::remove(Tester const&) (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.9)
==2884==    by 0x109B0F: main (in /home/ece551db/graderbase/work/yy258.097_bst_map.TmPMhm/test.9)
==2884==  If you believe this happened as a result of a stack
==2884==  overflow in your program's main thread (unlikely but
==2884==  possible), you can try to increase the size of the
==2884==  main thread stack using the --main-stacksize= flag.
==2884==  The main thread stack size used in this run was 8388608.
==2884== 
==2884== HEAP SUMMARY:
==2884==     in use at exit: 5,513 bytes in 90 blocks
==2884==   total heap usage: 242 allocs, 152 frees, 88,800 bytes allocated
==2884== 
==2884== LEAK SUMMARY:
==2884==    definitely lost: 0 bytes in 0 blocks
==2884==    indirectly lost: 0 bytes in 0 blocks
==2884==      possibly lost: 0 bytes in 0 blocks
==2884==    still reachable: 5,513 bytes in 90 blocks
==2884==         suppressed: 0 bytes in 0 blocks
==2884== Reachable blocks (those to which a pointer was found) are not shown.
==2884== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2884== 
==2884== For counts of detected and suppressed errors, rerun with: -v
==2884== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
